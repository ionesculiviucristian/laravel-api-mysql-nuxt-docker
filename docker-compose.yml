version: '3.7'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - 80:80
      - 443:443
    env_file:
      - ./docker/dev/build/nginx-proxy/.env
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./docker/dev/build/nginx-proxy/certs/app.com.crt:/etc/nginx/certs/app.com.crt
      - ./docker/dev/build/nginx-proxy/certs/app.com.key:/etc/nginx/certs/app.com.key

  nginx:
    build:
      context: .
      dockerfile: docker/dev/build/nginx/Dockerfile
    env_file:
      - ./docker/dev/build/nginx/.env
    volumes:
      - ./docker/dev/build/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ${APP_API_PUBLIC_PATH}:/api/public

  php:
    build:
      context: .
      dockerfile: docker/dev/build/php/Dockerfile
    env_file:
      - ./docker/dev/build/php/.env
    volumes:
      - ${APP_API_PATH}:/api

  mysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    env_file:
      - ./docker/dev/build/mysql/.env
    volumes:
      - ./volumes/mysql:/var/lib/mysql

  node:
    restart: always
    build:
      context: .
      dockerfile: docker/dev/build/node/Dockerfile
    expose:
      - 3000
    env_file:
      - ./docker/dev/build/node/.env
